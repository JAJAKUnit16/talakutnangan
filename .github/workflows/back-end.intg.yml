name: Web Back-end Integration Tests

on:
  push:
    paths:
      - 'shareable/**'
      - 'common_front-end/**'
      - 'common_back-end/**'
      - 'database/**'
      - 'server/**'
      - 't/helpers/**'
      - 't/integration/api/**'
      - 't/integration/t/**'
      - 'renderer/**'
      - 'pages/**'
      - 'components/**'
      - '.github/workflows/back-end.intg.yml'
      - 'jest.back.intg.config.json'
  pull_request:
    types:
      - opened
      - reopened
      - review_requested
    branches:
      - master
    paths:
      - 'shareable/**'
      - 'common_front-end/**'
      - 'common_back-end/**'
      - 'database/**'
      - 'server/**'
      - 't/helpers/**'
      - 't/integration/api/**'
      - 't/integration/t/**'
      - 'renderer/**'
      - 'pages/**'
      - 'components/**'
      - '.github/workflows/back-end.intg.yml'
      - 'jest.back.intg.config.json'

env:
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}

jobs:
  pushed_integration_tests:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checking out from the pushed source
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.push.repository.full_name }}
        ref: ${{ github.event.push.after }}
    - name: Testing on Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
    # See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md#postgresql
    - name: Start database server
      run: sudo systemctl start postgresql.service
    - name: Create root database user
      run: sudo -u postgres psql -c "CREATE USER root WITH PASSWORD 'root';"
    - name: Create database
      run: |
        sudo -u postgres psql -c "CREATE DATABASE talakutnangan_test WITH OWNER = root;"
    - name: Use .env.ci as the environment file for back-end
      run: mv .env.ci .env
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}_${{ hashFiles('package.json') }}
        restore-keys: |
          ${{ runner.os }}_${{ hashFiles('package.json') }}
          ${{ runner.os }}_
    - run: npm install
    - run: ./execute.ps1 -database -upgrade
      shell: pwsh
    - run: npm run seed:up:all
    - run: npm run build
    - run: ./execute.ps1 -test intg:back
      shell: pwsh
      timeout-minutes: 3

  pulled_integration_tests:
    if: ${{ github.event_name == 'pull_request' }}
    env:
      PAT: ${{ secrets.PAT }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        username: [ KennethTrecy ]
        include:
          - username: KennethTrecy
            token: ${{ env.PAT }}
    runs-on: ubuntu-latest
    steps:
    - name: Checking out from the pull requested source
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ matrix.token }}
    - name: Testing on Node.js 16.x
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
    # See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md#postgresql
    - name: Start database server
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      run: sudo systemctl start postgresql.service
    - name: Create root database user
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      run: sudo -u postgres psql -c "CREATE USER root WITH PASSWORD 'root';"
    - name: Create database
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      run: |
        sudo -u postgres psql -c "CREATE DATABASE talakutnangan_test WITH OWNER = root;"
    - name: Use .env.ci as the environment file for back-end
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      run: mv .env.ci .env
    - name: Cache node modules
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}_${{ hashFiles('package.json') }}
        restore-keys: |
          ${{ runner.os }}_${{ hashFiles('package.json') }}
          ${{ runner.os }}_
    - run: npm install
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
    - run: ./execute.ps1 -database -upgrade
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      shell: pwsh
    - run: npm run seed:up:all
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
    - run: npm run build
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
    - run: ./execute.ps1 -test intg:back
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, matrix.username) }}
      shell: pwsh
      timeout-minutes: 3
